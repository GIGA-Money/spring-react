package com.springreact.springreact.domain;

import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import lombok.Data;

@Entity(name = "car")
@Data
/**
 * @Entity The entity annotation is used to specify that the class is an entity attributes: the name
 *         attribute is used to specify the entity name and is optional. I.E @Entity(name =
 *         "[string]")
 * 
 * @author GIGA-Money This is the car entity class.
 *
 */
public class CarEntity {

  /**
   * Many to many relationship there can be mulple cars to an owner, or there can be multiple owners
   * per car.
   */
  @ManyToMany(mappedBy = "cars")
  private Set<OwnerEntity> owner;
  /**
   * Fetch type = lazy means that when the owner is fetch, it fetches from the database.
   
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "owner")
  private OwnerEntity owner;
   */
  /**
   * Gets the owner first name for this car.
   * 
   * @return
   */
  public String getOwnerFirstName() {
    return owner.getFirstname();
  }

  /**
   * @id Denotes the primary key.
   * @generatedValue Denotes that the ID is automatically generated by the db. if we wanted to name
   *                 the column the @Column would be used, and the name, nullable, and length are
   *                 Defined as arguments. we can add variables to increase the fields that are
   *                 viewable.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private long id;
  private String brand, model, color, regNum;
  private int year, price;

  public CarEntity(String brand, String model, String color, String regNum, int year, int price) {
    super();
    setBrand(brand);
    setModel(model);
    setColor(color);
    setRegNum(regNum);
    setYear(year);
    setPrice(price);
  }

  public CarEntity(String brand, String model, String color, String regNum, int year, int price,
      OwnerEntity owner) {
    super();
    setBrand(brand);
    setModel(model);
    setColor(color);
    setRegNum(regNum);
    setYear(year);
    setPrice(price);
    setOwner(owner);
    setFirstName(getOwnerFirstName());
  }

}

/**
 * get the owner entity.
 * 
 * public OwnerEntity getOwnerEntity() { return owner; }
 */
/**
 * Set the owner entity. Setter provided by lombok. public void setOnwerEnity(OwnerEntity owner) {
 * this.owner = owner; }
 */
